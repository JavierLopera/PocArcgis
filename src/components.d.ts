/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';


export namespace Components {
  interface CorreosCdkAlex {
    /**
    * The first name
    */
    'first': string;
    /**
    * The last name
    */
    'last': string;
  }
  interface CorreosCdkTarificador {}
  interface CorreosCdkTrackingCard {}
  interface CorreosUiButton {
    /**
    * Valor (opcional) que permite habilitar o deshablitar el boton
    */
    'disabled': boolean;
    /**
    * Valor (opcional) que permite asignar un formulario al que se hará submit
    */
    'form': string;
    /**
    * Valor (opcional) que permite indicar el tipo de boton
    */
    'type': string;
  }
  interface CorreosUiCard {
    /**
    * Valor (opcional) que permite habilitar o deshablitar el boton
    */
    'disabled': boolean;
  }
  interface CorreosUiCardLarge {
    /**
    * Valor (opcional) que permite habilitar o deshablitar el boton
    */
    'disabled': boolean;
  }
  interface CorreosUiIconButton {
    /**
    * Value aria-label attribute of the button
    */
    'ariaLabel': string;
    /**
    * Value (optional) which allows to enable or disable the button
    */
    'disabled': boolean;
  }
  interface CorreosUiInput {
    /**
    * Flag para indicar que coja el foco al renderizarse
    */
    'autofocus': boolean;
    /**
    * Icono a mostrar en el encabezado
    */
    'icon': string;
    /**
    * Valor de la etiqueta
    */
    'label': string;
    /**
    * Carácteres máximos que debe tener el valor del campo input
    */
    'maxlength': string;
    /**
    * Carácteres mínimos que debe tener el valor del campo input
    */
    'minlength': string;
    /**
    * Flag para indicar que coja el foco al renderizarse
    */
    'options': string;
    /**
    * Patrón de validación
    */
    'pattern': string;
    /**
    * Texto del marcado o información del campo
    */
    'placeholder': string;
    /**
    * Flag para indicar la obligatoriedad del campo
    */
    'required': boolean;
    /**
    * Tipo del campo input
    */
    'type': string;
    /**
    * Valor del campo input
    */
    'value': string;
  }
  interface CorreosUiLopera {
    /**
    * The first name
    */
    'first': string;
    /**
    * The last name
    */
    'last': string;
  }
  interface CorreosUiMenu {
    /**
    * Metodo para ocultar el menú
    */
    'close': () => Promise<void>;
    /**
    * Funtión a lanzar cuando se hace click sobre un elemento pasando el valor
    */
    'elementClicked': Function;
    /**
    * Metodo parasaber estado actual del menú
    */
    'isOpened': () => Promise<boolean>;
    /**
    * Metodo para mostrar el menú
    */
    'open': () => Promise<void>;
    /**
    * Flag para abrir inicialmente el menú
    */
    'opened': boolean;
    /**
    * Set de opciones a mostrar en el menú
    */
    'options': string;
    /**
    * Elemento HTML padre sobre el cual asignar el origen del menú
    */
    'parent': HTMLInputElement;
    /**
    * Metodo para cambiar el estado de la visiblidad del menú
    */
    'toggle': () => Promise<void>;
    /**
    * Valor del campo input
    */
    'value': string;
  }
}

declare global {


  interface HTMLCorreosCdkAlexElement extends Components.CorreosCdkAlex, HTMLStencilElement {}
  var HTMLCorreosCdkAlexElement: {
    prototype: HTMLCorreosCdkAlexElement;
    new (): HTMLCorreosCdkAlexElement;
  };

  interface HTMLCorreosCdkTarificadorElement extends Components.CorreosCdkTarificador, HTMLStencilElement {}
  var HTMLCorreosCdkTarificadorElement: {
    prototype: HTMLCorreosCdkTarificadorElement;
    new (): HTMLCorreosCdkTarificadorElement;
  };

  interface HTMLCorreosCdkTrackingCardElement extends Components.CorreosCdkTrackingCard, HTMLStencilElement {}
  var HTMLCorreosCdkTrackingCardElement: {
    prototype: HTMLCorreosCdkTrackingCardElement;
    new (): HTMLCorreosCdkTrackingCardElement;
  };

  interface HTMLCorreosUiButtonElement extends Components.CorreosUiButton, HTMLStencilElement {}
  var HTMLCorreosUiButtonElement: {
    prototype: HTMLCorreosUiButtonElement;
    new (): HTMLCorreosUiButtonElement;
  };

  interface HTMLCorreosUiCardElement extends Components.CorreosUiCard, HTMLStencilElement {}
  var HTMLCorreosUiCardElement: {
    prototype: HTMLCorreosUiCardElement;
    new (): HTMLCorreosUiCardElement;
  };

  interface HTMLCorreosUiCardLargeElement extends Components.CorreosUiCardLarge, HTMLStencilElement {}
  var HTMLCorreosUiCardLargeElement: {
    prototype: HTMLCorreosUiCardLargeElement;
    new (): HTMLCorreosUiCardLargeElement;
  };

  interface HTMLCorreosUiIconButtonElement extends Components.CorreosUiIconButton, HTMLStencilElement {}
  var HTMLCorreosUiIconButtonElement: {
    prototype: HTMLCorreosUiIconButtonElement;
    new (): HTMLCorreosUiIconButtonElement;
  };

  interface HTMLCorreosUiInputElement extends Components.CorreosUiInput, HTMLStencilElement {}
  var HTMLCorreosUiInputElement: {
    prototype: HTMLCorreosUiInputElement;
    new (): HTMLCorreosUiInputElement;
  };

  interface HTMLCorreosUiLoperaElement extends Components.CorreosUiLopera, HTMLStencilElement {}
  var HTMLCorreosUiLoperaElement: {
    prototype: HTMLCorreosUiLoperaElement;
    new (): HTMLCorreosUiLoperaElement;
  };

  interface HTMLCorreosUiMenuElement extends Components.CorreosUiMenu, HTMLStencilElement {}
  var HTMLCorreosUiMenuElement: {
    prototype: HTMLCorreosUiMenuElement;
    new (): HTMLCorreosUiMenuElement;
  };
  interface HTMLElementTagNameMap {
    'correos-cdk-alex': HTMLCorreosCdkAlexElement;
    'correos-cdk-tarificador': HTMLCorreosCdkTarificadorElement;
    'correos-cdk-tracking-card': HTMLCorreosCdkTrackingCardElement;
    'correos-ui-button': HTMLCorreosUiButtonElement;
    'correos-ui-card': HTMLCorreosUiCardElement;
    'correos-ui-card-large': HTMLCorreosUiCardLargeElement;
    'correos-ui-icon-button': HTMLCorreosUiIconButtonElement;
    'correos-ui-input': HTMLCorreosUiInputElement;
    'correos-ui-lopera': HTMLCorreosUiLoperaElement;
    'correos-ui-menu': HTMLCorreosUiMenuElement;
  }
}

declare namespace LocalJSX {
  interface CorreosCdkAlex {
    /**
    * The first name
    */
    'first'?: string;
    /**
    * The last name
    */
    'last'?: string;
  }
  interface CorreosCdkTarificador {
    'onEventChange'?: (event: CustomEvent<any>) => void;
  }
  interface CorreosCdkTrackingCard {
    'onFormSubmit'?: (event: CustomEvent<any>) => void;
  }
  interface CorreosUiButton {
    /**
    * Valor (opcional) que permite habilitar o deshablitar el boton
    */
    'disabled'?: boolean;
    /**
    * Valor (opcional) que permite asignar un formulario al que se hará submit
    */
    'form'?: string;
    /**
    * Valor (opcional) que permite indicar el tipo de boton
    */
    'type'?: string;
  }
  interface CorreosUiCard {
    /**
    * Valor (opcional) que permite habilitar o deshablitar el boton
    */
    'disabled'?: boolean;
  }
  interface CorreosUiCardLarge {
    /**
    * Valor (opcional) que permite habilitar o deshablitar el boton
    */
    'disabled'?: boolean;
  }
  interface CorreosUiIconButton {
    /**
    * Value aria-label attribute of the button
    */
    'ariaLabel'?: string;
    /**
    * Value (optional) which allows to enable or disable the button
    */
    'disabled'?: boolean;
  }
  interface CorreosUiInput {
    /**
    * Flag para indicar que coja el foco al renderizarse
    */
    'autofocus'?: boolean;
    /**
    * Icono a mostrar en el encabezado
    */
    'icon'?: string;
    /**
    * Valor de la etiqueta
    */
    'label'?: string;
    /**
    * Carácteres máximos que debe tener el valor del campo input
    */
    'maxlength'?: string;
    /**
    * Carácteres mínimos que debe tener el valor del campo input
    */
    'minlength'?: string;
    /**
    * Descripción del evento
    */
    'onEventChange'?: (event: CustomEvent<any>) => void;
    /**
    * Flag para indicar que coja el foco al renderizarse
    */
    'options'?: string;
    /**
    * Patrón de validación
    */
    'pattern'?: string;
    /**
    * Texto del marcado o información del campo
    */
    'placeholder'?: string;
    /**
    * Flag para indicar la obligatoriedad del campo
    */
    'required'?: boolean;
    /**
    * Tipo del campo input
    */
    'type'?: string;
    /**
    * Valor del campo input
    */
    'value'?: string;
  }
  interface CorreosUiLopera {
    /**
    * The first name
    */
    'first'?: string;
    /**
    * The last name
    */
    'last'?: string;
  }
  interface CorreosUiMenu {
    /**
    * Funtión a lanzar cuando se hace click sobre un elemento pasando el valor
    */
    'elementClicked'?: Function;
    /**
    * Flag para abrir inicialmente el menú
    */
    'opened'?: boolean;
    /**
    * Set de opciones a mostrar en el menú
    */
    'options'?: string;
    /**
    * Elemento HTML padre sobre el cual asignar el origen del menú
    */
    'parent'?: HTMLInputElement;
    /**
    * Valor del campo input
    */
    'value'?: string;
  }

  interface IntrinsicElements {
    'correos-cdk-alex': CorreosCdkAlex;
    'correos-cdk-tarificador': CorreosCdkTarificador;
    'correos-cdk-tracking-card': CorreosCdkTrackingCard;
    'correos-ui-button': CorreosUiButton;
    'correos-ui-card': CorreosUiCard;
    'correos-ui-card-large': CorreosUiCardLarge;
    'correos-ui-icon-button': CorreosUiIconButton;
    'correos-ui-input': CorreosUiInput;
    'correos-ui-lopera': CorreosUiLopera;
    'correos-ui-menu': CorreosUiMenu;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements {
      'correos-cdk-alex': LocalJSX.CorreosCdkAlex & JSXBase.HTMLAttributes<HTMLCorreosCdkAlexElement>;
      'correos-cdk-tarificador': LocalJSX.CorreosCdkTarificador & JSXBase.HTMLAttributes<HTMLCorreosCdkTarificadorElement>;
      'correos-cdk-tracking-card': LocalJSX.CorreosCdkTrackingCard & JSXBase.HTMLAttributes<HTMLCorreosCdkTrackingCardElement>;
      'correos-ui-button': LocalJSX.CorreosUiButton & JSXBase.HTMLAttributes<HTMLCorreosUiButtonElement>;
      'correos-ui-card': LocalJSX.CorreosUiCard & JSXBase.HTMLAttributes<HTMLCorreosUiCardElement>;
      'correos-ui-card-large': LocalJSX.CorreosUiCardLarge & JSXBase.HTMLAttributes<HTMLCorreosUiCardLargeElement>;
      'correos-ui-icon-button': LocalJSX.CorreosUiIconButton & JSXBase.HTMLAttributes<HTMLCorreosUiIconButtonElement>;
      'correos-ui-input': LocalJSX.CorreosUiInput & JSXBase.HTMLAttributes<HTMLCorreosUiInputElement>;
      'correos-ui-lopera': LocalJSX.CorreosUiLopera & JSXBase.HTMLAttributes<HTMLCorreosUiLoperaElement>;
      'correos-ui-menu': LocalJSX.CorreosUiMenu & JSXBase.HTMLAttributes<HTMLCorreosUiMenuElement>;
    }
  }
}


